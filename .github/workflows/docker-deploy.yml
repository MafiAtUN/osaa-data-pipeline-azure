name: Docker Build and Deploy

on:
  push:
    branches: [ main, azure-deployment ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test-docker:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image for testing
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: false
        tags: osaa-data-pipeline:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Test that the container starts successfully
        docker run --rm -d --name test-container \
          -e ENABLE_AZURE_UPLOAD=false \
          -e ADMIN_USERNAME=test \
          -e ADMIN_PASSWORD=test123 \
          -e TARGET=dev \
          osaa-data-pipeline:test sleep 30
        
        # Wait for container to start
        sleep 5
        
        # Check if container is running
        docker ps | grep test-container
        
        # Test entrypoint commands
        docker exec test-container /app/entrypoint.sh --help
        
        # Cleanup
        docker stop test-container

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Container Instances
      run: |
        # Get the latest image tag
        IMAGE_TAG="latest"
        FULL_IMAGE_NAME="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
        
        # Deploy using the secure deployment script
        chmod +x deploy-secure-azure.sh
        ./deploy-secure-azure.sh
        
        echo "âœ… Deployment completed successfully"
        echo "ðŸ“± Container image: ${FULL_IMAGE_NAME}"

    - name: Get deployment status
      run: |
        az container show \
          --resource-group osaa-data-pipeline \
          --name osaa-data-pipeline \
          --query "{state:instanceView.state,ip:ipAddress.ip,ports:ipAddress.ports}" \
          --output table
