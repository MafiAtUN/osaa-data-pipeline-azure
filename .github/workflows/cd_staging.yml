name: Build, QA, and Deploy Container when PRs to main are Merged

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build-qa-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      TARGET: prod
      USERNAME: ${{ secrets.USERNAME }}
      GATEWAY: github_deploy_env
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Container
      run: docker build -t osaa-mvp .

    - name: Run QA Process Through the Container
      id: run-container
      env:
        TARGET: ${{ secrets.TARGET || 'qa' }}
        GATEWAY: ${{ secrets.GATEWAY || 'shared_state' }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}
        AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
        POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE || 'postgres' }}
        USERNAME: ${{ secrets.USERNAME || 'osaa-mvp-user' }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME || 'osaa-mvp' }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT || '5432' }}
      run: |
        docker run --name osaa-mvp \
          -e TARGET=$TARGET \
          -e GATEWAY=$GATEWAY \
          -e AWS_ROLE_ARN=${{ secrets.AWS_ROLE_ARN }} \
          -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
          -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
          -e USERNAME=$USERNAME \
          -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
          -e POSTGRES_PORT=$POSTGRES_PORT \
          -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          -e POSTGRES_DATABASE=$POSTGRES_DATABASE \
          osaa-mvp etl staging
      continue-on-error: true

    - name: Check Container Logs
      run: docker logs osaa-mvp

    - name: Check Container Status
      run: |
        container_status=$(docker inspect --format='{{.State.Status}}' osaa-mvp)
        exit_code=$(docker inspect --format='{{.State.ExitCode}}' osaa-mvp)
        error_log=$(docker logs osaa-mvp 2>&1)
        
        echo "Container Status: $container_status"
        echo "Exit Code: $exit_code"
        
        if [ "$container_status" != "exited" ]; then
          echo "Error: Container did not complete execution"
          echo "$error_log"
          exit 1
        fi
        
        if [ "$exit_code" -ne 0 ]; then
          echo "Error: Container exited with non-zero status code"
          echo "$error_log"
          exit 1
        fi
        
        echo "Container ran successfully"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest
          type=ref,event=branch
          type=sha,format=long

    - name: Push to GitHub Container Registry
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Cleanup
      if: always()
      run: |
        docker stop osaa-mvp || true
        docker rm osaa-mvp || true
